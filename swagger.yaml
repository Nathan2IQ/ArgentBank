swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

# routes api pour les transactions et leurs détails
/accounts/transactions:
  get:
    security:
      - Bearer: []
    tags:
      - Transactions Module
    summary: Transactions List API
    description: API for fetching the transactions
    produces:
      - application/json
    responses:
      "200":
        description: Transactions list retrieved successfully
        schema:
          $ref: "#/definitions/TransactionsListResponse"
      "400":
        description: Invalid Fields
      "500":
        description: Internal Server Error

/accounts/transactions/{transactionId}:
  get:
    security:
      - Bearer: []
    tags:
      - Transactions Module
    summary: Transaction details API
    description: API for fetching the details of the transaction
    parameters:
      - name: transactionId
        in: path
        required: true
        type: string
        description: The ID of the transaction
    produces:
      - application/json
    responses:
      "200":
        description: Transaction details retrieved successfully
        schema:
          $ref: "#/definitions/TransactionDetailsResponse"
      "400":
        description: Invalid Fields
      "500":
        description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

  # les définitions pour les fetch des transactions
  TransactionSummary:
    type: object
    properties:
      id:
        type: string
      amount:
        type: number
      merchant:
        type: string
      date:
        type: string
        format: date-time

  TransactionDetails:
    type: object
    properties:
      id:
        type: string
      category:
        type: string
        description: Category of the transaction (food, shopping, rent, etc.)
      type:
        type: string
        description: Type of transaction (debit, credit, etc.)
      description:
        type: string
        description: Description of the transaction

  TransactionsListResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: "#/definitions/TransactionSummary"

  TransactionDetailsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: "#/definitions/TransactionDetails"
